{
  "metadata": {
    "id": "snakes-and-ladders",
    "name": "Serpientes y Escaleras",
    "description": "Un juego de mesa clásico donde los jugadores compiten para llegar a la posición 100, subiendo escaleras y bajando por serpientes.",
    "version": "1.0.0",
    "minPlayers": 2,
    "maxPlayers": 4
  },
  "initialState": {
    "game": {
      "name": "Serpientes y Escaleras",
      "phase": "SETUP",
      "turn": "p1",
      "winner": null,
      "lastRoll": 0
    },
    "players": [
      { "id": "p1", "name": "Player 1", "position": 0 },
      { "id": "p2", "name": "Player 2", "position": 0 }
    ],
    "board": {
      "winPosition": 100,
      "moves": {
        "4": 14,
        "9": 31,
        "17": 7,
        "20": 38,
        "28": 84,
        "40": 59,
        "51": 67,
        "54": 34,
        "62": 19,
        "63": 81,
        "64": 60,
        "71": 91,
        "87": 24,
        "93": 73,
        "95": 75,
        "98": 79
      }
    }
  },
  "rules": {
    "objective": "Be the first player to reach position 100.",
    "mechanics": "Players take turns rolling a six-sided die and moving their piece forward by the number of squares shown. If a player lands on a square with the bottom of a ladder, they climb up to the square at the top of the ladder. If they land on a square with the head of a snake, they slide down to the square at the tail of the snake.",
    "turnStructure": "Players will inform you of their dice roll (e.g., 'I rolled a 3'). When they do: 1) Determine whose turn it is (check game.turn). If game.turn is 'p1', update players.0; if 'p2', update players.1; if 'p3', update players.2; if 'p4', update players.3. 2) Add the roll value to their position using ADD_STATE on the correct players.X.position path, 3) The system will AUTOMATICALLY handle ladders and snakes - you don't need to check board.moves or apply special moves, 4) Check win condition (position >= board.winPosition), 5) Switch turns if game not won (cycle game.turn through p1, p2, p3, p4 as needed), 6) Narrate what happened including any ladder/snake that was applied. Note: If a player explicitly asks you to roll for them, use ROLL_DICE action.",
    "boardLayout": "The board.moves object contains snakes and ladders. If the value is HIGHER than the key it is a LADDER (use soundEffect: ladder_up). If the value is LOWER than the key it is a SNAKE (use soundEffect: snake_down).",
    "examples": [
      "User: Roll the dice | You: [{ \"action\": \"ROLL_DICE\", \"die\": \"1d6\" }]",
      "User: I rolled a 4 | You: [{ \"action\": \"ADD_STATE\", \"path\": \"players.0.position\", \"value\": 4 }, { \"action\": \"SET_STATE\", \"path\": \"game.turn\", \"value\": \"p2\" }, { \"action\": \"NARRATE\", \"text\": \"You moved to 4 and climbed a ladder to 14! Next player's turn.\", \"soundEffect\": \"ladder_up\" }]",
      "User: Where am I? | You: [{ \"action\": \"NARRATE\", \"text\": \"You're at position 14. Your turn!\" }]"
    ]
  },
  "soundEffects": {
    "ladder_up": "/sounds/ladder_up.wav",
    "snake_down": "/sounds/snake_down.wav"
  }
}
